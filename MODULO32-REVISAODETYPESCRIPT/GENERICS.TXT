



















-> BEM... O ARQUIVO SERÁ BEM PEQUENO:














-> PODERÍAMSO FALAR MT SOBRE GENERICS,





MAS NEM USAMOS ELES TANTO ASSIM...











--> GENERICS --> NOS DEIXAM ESSENCIALMENTE 'BE FLEXIBLE'


ACERCA DOS TYPES QUE CERTOS OBJECTS UTILIZAM..

















--> temos este exemplo:















let numberArray: Array<number>;

















--> ARRAY, POR SI SÓ,


É UM TYPE,



mas se torna mais útil quando DIZEMOS O QUE HÁ DENTRO DESSE ARRAY... (os values que esse array segura)....






--> OK, AGORA ELE SÓ ACEITARÁ NUMBERS, NESSE EXEMPLO:





let numberArray: Array<number>;



numberArray = [1, 2, 3] ;














---> 







ok...
























esse é um array válido, sim....











--> é assim que usamos GENERICS...









a escrita alternativa é 









string[];..